import sys
import getopt
import os
import mimetypes
from Linker import findURLs
sep="/"

def makeMakefile(f,url):
	f.write("#dependecis for file "+url+"\n")
	thisf=open(url,"rb")
	mime=mimetypes.guess_type(url)[0]
	base=os.path.dirname(url)
	deps=map(lambda x:sep.join(x.split("/")),findURLs(thisf.read(),mime))
	url=url[4:]# removes the src/
	f.write("build/"+url.lstrip("./")+".link: "+url.lstrip("./")+" "+" ".join(map(lambda a:sep.join(["build"+base[3:].lstrip("./"),a.lstrip("./")])+".url",deps))+(" build/"+base[4:].lstrip("./"))+"\n")
	f.write("	python Linker.py $< $@\n\n")
	for d in deps:
		makeMakefile(f,sep.join([base,d]))


if __name__=="__main__":
	try:
		opts,args=getopt.getopt(sys.argv[1:],"n",["dry-run"])
	except getopt.GetoptError, err:
		print str(err)
		sys.exit(2)
	if ("-n","") in opts:
		f=sys.stdout
	else:
		f=file("makefile","w")
	f.write("""
#this file was generated by the config script

#vpath rules for sorce files
vpath %.html	src
vpath %.js	src
vpath %.css	src
vpath %.png	src

#vpath rules for build files
vpath %.link	build
vpath %.url	build

all: dist
.PHONY:dist
dist: build
	-mkdir dist/
	cp build/index.html.link dist/index.html
.PHONY:build
build: build/index.html.link
.PHONY:clean
clean:
	-rm -r build/ dist/
.PHONY:configure
configure:
	python config.py
build/%/:src/%/
	mkdir -p $@
#%.link:%
#	python Linker.py $< $@
build/%.url:build/%.link
	python Assambler.py $< $@
""")
	makeMakefile(f,"src/index.html")
